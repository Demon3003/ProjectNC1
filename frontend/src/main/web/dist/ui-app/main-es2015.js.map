{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.service.ts","./src/app/authorization/authorization.component.ts","./src/app/authorization/authorization.component.html","./src/app/entities/user.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/registration/_helpers/must-match.validator.ts","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AuthorizationComponent} from \"./authorization/authorization.component\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {AppComponent} from \"./app.component\";\nimport {RegistrationComponent} from \"./registration/registration.component\";\n\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: '/login'},\n  // { path: '', component: AppComponent},\n  { path: 'home', component: HomeComponent},\n  { path: 'login', component: AuthorizationComponent},\n  { path: 'signup', component: RegistrationComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport { catchError, tap, finalize } from 'rxjs/operators';\nimport {AppService} from \"./app.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'ui-app';\n  constructor( private http: HttpClient, private app: AppService, private router: Router) {\n    this.app.authenticate(undefined, undefined);\n  }\n  logout() {\n    this.http.post('logout', {}).pipe(finalize(() => {\n      this.app.authenticated = false;\n      this.router.navigateByUrl('/login');\n    })).subscribe();\n\n  }\n}\n","\n<nav  class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n  <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item \">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/home\">Home </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/login\">Login</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" (click)=\"logout()\">Logout<span class=\"sr-only\">(current)</span></a>\n      </li>\n    </ul>\n  </div>\n</nav>\n<router-outlet></router-outlet>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport {Injectable, NgModule} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthorizationComponent } from './authorization/authorization.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport {RegistrationComponent} from './registration/registration.component';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HTTP_INTERCEPTORS\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport {AppService} from './app.service';\n\n\n@Injectable()\nexport class XhrInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const xhr = req.clone({\n      headers: req.headers.set('X-Requested-With', 'XMLHttpRequest')\n    });\n    return next.handle(xhr);\n  }\n}\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthorizationComponent,\n    HomeComponent,\n    RegistrationComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n\n  providers: [AppService, { provide: HTTP_INTERCEPTORS, useClass: XhrInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n  authenticated = false;\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  authenticate(credentials, callback) {\n\n    const headers = new HttpHeaders(credentials ? {\n      authorization : 'Basic ' + btoa(credentials.username + ':' + credentials.password)\n    } : {});\n\n    this.http.get('user', {headers: headers}).subscribe(response => {\n      if (response['name']) {\n        this.authenticated = true;\n      } else {\n        this.authenticated = false;\n      }\n      return callback && callback();\n    });\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { User } from '../entities/user';\nimport {AppService} from '../app.service';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-authorization',\n  templateUrl: './authorization.component.html',\n  styleUrls: ['./authorization.component.css']\n})\nexport class AuthorizationComponent implements OnInit {\n\n  user: User = new User();\n  credentials = {username: '', password: ''};\n  check = false;\n  userForm: FormGroup = this.fb.group({\n    username: [this.credentials.username, [Validators.required, Validators.minLength(3)]],\n    password: [this.credentials.password, [Validators.required, Validators.minLength(3)]]\n  });\n\n\n  constructor(private fb: FormBuilder, private app: AppService, private http: HttpClient, private router: Router) {\n  }\n\n  login() {\n    this.app.authenticate(this.credentials, () => {\n      this.router.navigateByUrl('/home');\n    });\n    return false;\n  }\n  ngOnInit(): void {\n\n  }\n}\n","\n<section   class=\"min-vh-100\" id=\"cover\">\n  <div class=\"container\">\n      <h1>USER LOGIN</h1>\n      <h3>Welcome to BrainDuel!</h3>\n\n      <div class=\"row text-white\">\n          <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n              <img  src=\"https://img.icons8.com/plasticine/100/000000/user-male-circle.png\"/>\n  <!--                  <div class=\"alert alert-danger\" [hidden]=\"!error\">-->\n  <!--                    There was a problem logging in. Please try again.-->\n  <!--                  </div>-->\n              <form [formGroup]=\"userForm\" (ngSubmit)=\"login()\">\n                  <div class=\"form-group \">\n                      <input type=\"text\" formControlName=\"username\"  class=\"form-control text-center\"  placeholder=\"USERNAME\" required maxlength=\"20\">\n                  </div>\n                  <div class=\"form-group\">\n                      <input type=\"password\" formControlName=\"password\" class=\"form-control text-center\" id=\"exampleInputPassword1\" placeholder=\"PASSWORD\" required maxlength=\"20\">\n                  </div>\n                  <div class=\"form-group\">\n                      <div class=\"form-check \">\n                          <input class=\"form-check-input\" type=\"checkbox\" id=\"autoSizingCheck2\">\n                          <label class=\"form-check-label\" for=\"autoSizingCheck2\">\n                          Remember me\n                          </label>\n                      </div>\n                  </div>\n                  <button  class=\"btn btn-secondary btn-lg\" type=\"submit\" [disabled]=\"!userForm.valid\">LOGIN</button>\n              </form>\n              <div class=\"text-center\">\n                  <label style=\"color: white;\" class=\"btn\" >Forgot password?</label>\n                  <a routerLinkActive=\"active\" routerLink=\"/signup\"><label style=\"color: white;\" class=\"btn\" >Sign Up</label></a>\n              </div>\n          </div>\n      </div>\n  </div>\n</section>\n\n\n\n","export class User {\n  userName: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {AppService} from \"../app.service\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  title = 'Demo';\n  greeting = {};\n\n  constructor( private http: HttpClient, private app: AppService) {\n    http.get('resource').subscribe(data => this.greeting = data);\n  }\n\n  authenticated() {\n    return this.app.authenticated;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section   class=\"min-vh-100\" id=\"cover\">\n  <div class=\"col text-center text-white\">\n    <h1>Greeting</h1>\n    <div class=\"container\" [hidden]=\"!authenticated()\">\n      <p>The ID is {{greeting['id']}}</p>\n      <p>The content is {{greeting['content']}}</p>\n    </div>\n    <div [hidden]=\"authenticated()\">\n      <p>Login to see your greeting</p>\n    </div>\n  </div>\n</section>\n","import {FormGroup} from '@angular/forms';\n\n// custom validator to check that two fields match\nexport class MustMatchValidator {\n  static passwordConfirming(form: FormGroup): { [key: string]: boolean} {\n    const control = form.controls.password;\n    const matchingControl = form.controls.confirmPassword;\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({ mustMatch: true });\n      return {mustMatch: true};\n    }\n    return null;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../entities/user';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MustMatchValidator} from './_helpers/must-match.validator';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  registrationForm: FormGroup;\n  user: User = new User();\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.registrationForm = new FormGroup({\n      userName: new FormControl(''),\n      firstName: new FormControl(''),\n      lastName: new FormControl(''),\n      email: new FormControl('', [\n        Validators.email,\n        Validators.required\n      ]),\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(3)\n      ]),\n      confirmPassword: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(3),\n      ]),\n      checkAgreement: new FormControl([true,\n        Validators.requiredTrue\n      ])\n    }, {validators: MustMatchValidator.passwordConfirming});\n  }\n\n  onSubmit() {\n    console.log(this.user);\n    this.user.userName = this.registrationForm.get('userName').value;\n    this.user.firstName = this.registrationForm.get('firstName').value;\n    this.user.lastName = this.registrationForm.get('lastName').value;\n    this.user.email = this.registrationForm.get('email').value;\n    this.user.password = this.registrationForm.get('password').value;\n    this.router.navigateByUrl('/home');\n  }\n}\n","<section   class=\"min-vh-100\" id=\"cover\">\n  <div class=\"container\">\n    <h1>USER SIGN UP</h1>\n    <h3>for BrainDuel</h3>\n\n    <div class=\"row text-white\">\n      <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-group \">\n            <input type=\"text\" formControlName=\"userName\"  class=\"form-control text-center\"  placeholder=\"USERNAME\" required maxlength=\"20\">\n          </div>\n          <div class=\"form-group\">\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control text-center\"  placeholder=\"FIRST NAME\" required maxlength=\"20\">\n          </div>\n          <div class=\"form-group\">\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control text-center\"  placeholder=\"LAST NAME\" required maxlength=\"20\">\n          </div>\n          <div class=\"form-group\">\n            <input type=\"email\" formControlName=\"email\" class=\"form-control text-center\"  placeholder=\"EMAIL\" required maxlength=\"20\">\n            <div\n              *ngIf=\"registrationForm.get('email').invalid && registrationForm.get('email').touched\"\n              class=\"validation\">\n              <small *ngIf=\"registrationForm.get('email').errors.required\">\n                Email cannot be empty\n              </small>\n              <small *ngIf=\"registrationForm.get('email').errors.email\">\n                Please fill in a valid email address\n              </small>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <input type=\"password\" formControlName=\"password\" class=\"form-control text-center\" id=\"exampleInputPassword1\" placeholder=\"PASSWORD\" required maxlength=\"20\">\n            <div\n              *ngIf=\"registrationForm.get('password').invalid && registrationForm.get('password').touched\"\n              class=\"validation\">\n              <small *ngIf=\"registrationForm.get('password').errors.required\">\n                Password cannot be empty\n              </small>\n              <small *ngIf=\"registrationForm.get('password').errors.minlength\">\n                Password must be at least {{registrationForm.get('password').errors.minlength.requiredLength}} characters long\n              </small>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control text-center\" id=\"exampleInputPassword2\" placeholder=\"CONFIRM PASSWORD\" required maxlength=\"20\">\n            <div\n              *ngIf=\"registrationForm.get('confirmPassword').invalid && registrationForm.get('confirmPassword').touched\"\n              class=\"validation\">\n              <small *ngIf=\"registrationForm.get('confirmPassword').errors.required\">\n                Confirm Password is required\n              </small>\n              <small *ngIf=\"registrationForm.get('confirmPassword').errors.mustMatch\">\n                Passwords must match\n              </small>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check \">\n              <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"checkAgreement\" required id=\"autoSizingCheck2\">\n              <label class=\"form-check-label\" for=\"autoSizingCheck2\"> I agree to the BrainDuel Terms of Service and policy</label>\n              <div class=\"validation\" *ngIf=\"registrationForm.get('checkAgreement').invalid\">\n                You need to read and accept T & C\n              </div>\n            </div>\n\n          </div>\n            <button  class=\"btn btn-secondary btn-lg\" type=\"submit\" [disabled]=\"registrationForm.invalid\">SIGN UP</button>\n        </form>\n      </div>\n\n\n    </div>\n\n\n  </div>\n\n\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}