{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/authorization/authorization.component.ts","webpack:///src/app/authorization/authorization.component.html","webpack:///src/app/entities/user.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","http","app","router","title","authenticate","undefined","post","pipe","authenticated","navigateByUrl","subscribe","logout","selector","templateUrl","styleUrls","XhrInterceptor","next","xhr","clone","headers","set","handle","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AppService","credentials","callback","authorization","btoa","username","password","get","response","providedIn","AuthorizationComponent","fb","user","check","userForm","group","required","minLength","login","User","HomeComponent","greeting","data","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AuthorizationComponent} from \"./authorization/authorization.component\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {AppComponent} from \"./app.component\";\n\n\nconst routes: Routes = [\n  // { path: '', pathMatch: 'full', redirectTo: '/login'},\n  { path: '', component: AppComponent},\n  { path: 'home', component: HomeComponent},\n  { path: 'login', component: AuthorizationComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport {AppService} from \"./app.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'ui-app';\n  constructor( private http: HttpClient, private app: AppService, private router: Router) {\n    this.app.authenticate(undefined, undefined);\n  }\n  logout() {\n    this.http.post('logout', {}).pipe(tap(() => {\n      this.app.authenticated = false;\n      this.router.navigateByUrl('/login');\n    })).subscribe();\n  }\n}\n","\n<nav style=\"background: rgba(32, 39, 106, 0.95);\" class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/home\">Home <span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/login\">Login</a>\n      </li>\n      <li><a (click)=\"logout()\">Logout</a></li>\n    </ul>\n  </div>\n</nav>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport {Injectable, NgModule} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthorizationComponent } from './authorization/authorization.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HTTP_INTERCEPTORS\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport {AppService} from \"./app.service\";\n\n@Injectable()\nexport class XhrInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const xhr = req.clone({\n      headers: req.headers.set('X-Requested-With', 'XMLHttpRequest')\n    });\n    return next.handle(xhr);\n  }\n}\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthorizationComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n\n  providers: [AppService, { provide: HTTP_INTERCEPTORS, useClass: XhrInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n  authenticated = false;\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  authenticate(credentials, callback) {\n\n    const headers = new HttpHeaders(credentials ? {\n      authorization : 'Basic ' + btoa(credentials.username + ':' + credentials.password)\n    } : {});\n\n    this.http.get('user', {headers: headers}).subscribe(response => {\n      if (response['name']) {\n        this.authenticated = true;\n      } else {\n        this.authenticated = false;\n      }\n      return callback && callback();\n    });\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { User } from '../entities/user';\nimport {AppService} from \"../app.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-authorization',\n  templateUrl: './authorization.component.html',\n  styleUrls: ['./authorization.component.css']\n})\nexport class AuthorizationComponent implements OnInit {\n\n  user: User = new User;\n  credentials = {username: '', password: ''};\n  check = false;\n  userForm = this.fb.group({\n    username: [this.credentials.username, [Validators.required, Validators.minLength(3)]],\n    password: [this.credentials.password, [Validators.required, Validators.minLength(3)]]\n  });\n\n  constructor(private fb: FormBuilder, private app: AppService, private http: HttpClient, private router: Router) {\n  }\n\n  login() {\n    this.app.authenticate(this.credentials, () => {\n      this.router.navigateByUrl('/home');\n    });\n    return false;\n  }\n  ngOnInit(): void {\n  }\n}\n","\n<section   class=\"min-vh-100\" id=\"cover\">\n  <div class=\"container\">\n      <h1>USER LOGIN</h1>\n      <h3>Welcome to BrainDuel!</h3>\n\n      <div class=\"row text-white\">\n          <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n              <img  src=\"https://img.icons8.com/plasticine/100/000000/user-male-circle.png\"/>\n  <!--                  <div class=\"alert alert-danger\" [hidden]=\"!error\">-->\n  <!--                    There was a problem logging in. Please try again.-->\n  <!--                  </div>-->\n              <form [formGroup]=\"userForm\" (ngSubmit)=\"login()\">\n                  <div class=\"form-group \">\n                      <input type=\"text\" formControlName=\"username\"  class=\"form-control text-center\"  placeholder=\"USERNAME\" required maxlength=\"20\">\n                  </div>\n                  <div class=\"form-group\">\n                      <input type=\"password\" formControlName=\"password\" class=\"form-control text-center\" id=\"exampleInputPassword1\" placeholder=\"PASSWORD\" required maxlength=\"20\">\n                  </div>\n                  <div class=\"form-group\">\n                      <div class=\"form-check \">\n                          <input class=\"form-check-input\" type=\"checkbox\" id=\"autoSizingCheck2\">\n                          <label class=\"form-check-label\" for=\"autoSizingCheck2\">\n                          Remember me\n                          </label>\n                      </div>\n                  </div>\n                  <button  class=\"btn btn-secondary btn-lg\" type=\"submit\" [disabled]=\"!userForm.valid\">LOGIN</button>\n              </form>\n              <div class=\"text-right\">\n                  <label style=\"color: white;\" class=\"btn\" >Forgot password?</label>\n              </div>\n          </div>\n\n\n      </div>\n  </div>\n</section>\n\n\n\n","export class User {\n    userName: string;\n    password: string;\n    email: string;\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {AppService} from \"../app.service\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  title = 'Demo';\n  greeting = {};\n\n  constructor( private http: HttpClient, private app: AppService) {\n    http.get('resource').subscribe(data => this.greeting = data);\n  }\n\n  authenticated() {\n    return this.app.authenticated;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section   class=\"min-vh-100\" id=\"cover\">\n  <h1>Greeting</h1>\n  <div class=\"container\" [hidden]=\"!authenticated()\">\n    <p>The ID is {{greeting | json}}</p>\n    <p>The content is {{greeting | json}}</p>\n  </div>\n  <div [hidden]=\"authenticated()\">\n    <p>Login to see your greeting</p>\n  </div>\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}